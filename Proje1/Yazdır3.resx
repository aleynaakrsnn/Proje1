<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        B0J6ZBj56VB5DH8jIpbuYBG/cOQT0DV1Lr6XtbJj/Dl/FHzj3/Vq5NNE868p+TX+KYHNTus9ptsdraeg
        6j713cObFnjfHbf1ePwalq2pO1odALOqsCtCqbVMIWBWQ5LwNaneI6mz1WTeQdZWWc4GmgP2kjTxjh+C
        M2PWbBcrV9rY8X4ac59X1bOPTTbnLbWTOSNLQt+pZeQizp3WdM7pdsG4WC85qNVlzzvefd4N+mOtI5M+
        FrLiAgICAgICAgICAgICAgICDgi6Dry090HRmpUHRmpUGOq6EOBDmgg6wRcFWraazvWdpRMRPKXj8ZyH
        jfcwnMdpOabuZf3j/NC6+n7YvXlmjijz8f8ALVvpY/RyeMxPA56f+Iw5v845TO3Z1rt4NXhz/ktz8vFq
        3x2p+aHQZrAGknQANJJ3BbW+0byxvX5P8HtbU2c5ogiNjnyXzy07WsGk9dlzNR2thx8q/in1dPj9N2em
        mtbrybOybyDo6OzwzjZx9tJyyPRb4reoX3rg6nX5s/KZ2jyhu0w0p0eqstJlcoCAgICAgICAgICAgICA
        gICAgICCLmAoOvLTIOnLSIOlLSbkHEeBufr5Ld+vsQd3C8nKandnRxNDzpL7Nzuq2pZL5sl42taZ96sV
        iOkMusawgICAgICAgICAgICAgICAgICAgICAgICDgtQcBgGxBJAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEH//2Q==
</value>
  </data>
</root>